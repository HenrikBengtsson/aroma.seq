Package: aroma.seq
==================

Version: 0.10.1-9000 [2021-02-09]

 * ...


Version: 0.10.1 [2021-02-09]

BUG FIXES:

 * Package failed to load with R.filesets (>= 2.14.0) after it dropped
   the dsApply() function.

 * The validate() methods failed because the corresponding generic function
   was imported from R.utils and not R.filesets.
 

Version: 0.10.0 [2019-07-28]

NEW FEATURES:

 * readStats() and readTotalCNsAndBAFs() for SeqzFile no longer outputs
   a progress bar in non-interactive mode.

 * mpileup() now outputs sessionDetails() as a verbose message; was stdout.

 * pileup2seqz() requires sequenza (<= 2.1.2). If a newer version is installed,
   then an informative error message is produced.
   
BUG FIXES:

 * mpileup() for BamDataSet did not assert that BAM files have been indexed.
 

Version: 0.9.2 [2017-06-26]

BUG FIXES:

 * mpileup() for BamDataSet would give an error on "length(work) == 
   length(todo) is not TRUE" if and only if there were already processed
   results.  This bug was introduced while fixing the one in 0.9.1.
 

Version: 0.9.1 [2017-06-26]

BUG FIXES:

 * mpileup() for BamDataSet would give an error on "length(work) == 
   length(todo) is not TRUE", which was a cut'n'paste error.


Version: 0.9.0 [2017-03-24]

NEW FEATURES:

 * doBWA() and BwaAlignment supports single-end alignment using also
   BAM files as input (in addition to FASTQ files).

 * getIndexFile() gained arguments 'creat = TRUE' and 'clean = TRUE'
   for BamDataFile and FastaReferenceFile.

 * Add isPaired() for BamDataFile and BamDataSet.
 
 
Version: 0.8.0 [2016-11-08]

NEW FEATURES:

 * Now the future package is attached with this package.

PERFORMANCE:

 * Now enabling parallelization via futures by default.  User still
   need to configure what futures to use in order to parallelize.

REFACTORIZATION:

 * CLEANUP: Package no longer depends on BatchJobs and BiocParallel.
 
 * Started to add some support for the sequenza package.

 
Version: 0.7.0 [2016-09-05]

REFACTORIZATION:

 * CLEANUP: All parallel processing is now done via futures implemented
   by the future package.
 
 
Version: 0.6.10 [2016-08-30]

NEW FEATURES:

 * Added getSeqChecksums() for FastaReferenceFile to calculate checksums
   for individual sequences of a FASTA reference file.

 * Now print() for IlluminaFastqDataFile also report on the platform
   and file format.  It also reports on the flowcell ID, lane, barcode
   sequence, sample name, read direction and instrument ID based on
   the first sequence in the FASTQ file (iff the file format is known).

SOFTWARE QUALITY:

 * ROBUSTNESS: Now the constructor of IlluminaFastqDataFile asserts that
   all FASTQ files have a file format that is recognized/known.

 * ROBUSTNESS: Add isCompatibleWith() for AromaSeqDataFileSet, e.g. to check
   that all BAM files to each other use isCompatibleWith(bams, bams[[1]]).
 
 
Version: 0.6.9 [2016-01-08]

SOFTWARE QUALITY:

 * ROBUSTNESS: Now AbstractAlignment methods assert that the output
   data set is compatible with the index set.

 * ROBUSTNESS: When finding index sets from a FASTA reference files
   it could happen that a non-compatible index set was returned.
   Now we do a better job locating and validating compatibility.
 
 
Version: 0.6.8 [2016-01-01]

BUG FIXES:

 * process() for BwaAlignment() would give error that "if (isPaired) { :
   argument is not interpretable as logical", which was do to a typo and
   caught when processed using futures.
 
 
Version: 0.6.7 [2016-01-01]

NEW FEATURES:

 * Add stubs for MPileupFile and MPileupFileSet.

 * Now SeqzFile also supports gzip'ed files.
 
 
Version: 0.6.6 [2015-11-22]

SIGNIFICANT CHANGES:

 * Package now requires R (>= 3.2.2) released August 2015.
   This allows us to use BioC (>= 3.2) (October 2015).

SOFTWARE QUALITY:

 * ROBUSTNESS: Now buildIndex() and readHeader() for BamDataFile
   assert that the BAM file exists before trying to parse it.
   Likewise, print() for BamDataFile no longer give an error
   if BAM file does not exist.

REFACTORIZATION:

 * ROBUSTNESS: Explicitly importing core R functions.

BUG FIXES:

 * Adjusted for Bowtie2 2.2.0 (Feb 2014) which no longer has bowtie2-align but
   bowtie2-align-s and bowtie2-align-l.
 
 
Version: 0.6.5 [2015-06-01]

NEW FEATURES:

 * Now the scoring/reporting on known orderings of sequences also recognizes
   mixed ordering with roman numeral (e.g. mouse chromosomes).

BUG FIXES:

 * readDataFrame() for FastaReferenceIndexFile did not handle large genomes
   such as the human one, because it tried to represent the file offset using
   'integer', which was not enough to represent it.
 
 
Version: 0.6.4 [2015-05-13]

NEW FEATURES:

 * Added findCNVkit() and isCapableOf(aroma.seq, "CNVkit").

 * Added CnvKitCopyNumberRatio(File|Set).

BUG FIXES:

 * buildTopHat2TranscriptomeIndexSet(..., skip=TRUE) would still require write
   permission and give an error if such do not exist.
 
 
Version: 0.6.3 [2015-05-08]

SIGNIFICANT CHANGES:

 * Using Emsembl-flavored organism names, e.g. Homo_sapiens and Mus_musculus
   (was HomoSapiens and MusMusculus).
 
 
Version: 0.6.2 [2015-05-07]

NEW FEATURES:

 * Added splitByTargetType() for BamDataSet.

 * Added getFlagStat() for BamDataFile.

 * Added getIndexFile() and hasIndex() to FastaReferenceIndexFile.
   The print() method reports on the existence of the index file.

 * ROBUSTNESS: All SequenceContigsInterface classes report on
   possible ways the sequences/chromosomes are ordered.

SOFTWARE QUALITY:

 * ROBUSTNESS: Now print() for BamDataSet warns if there are BAM files that
   have been aligned to different target sequences, which would indicate that
   different FASTA reference files have been used.

REFACTORIZATION:

 * CLEANUP: Added SequenceContigsInterface providing methods for
   querying sequence names and lengths etc.  Several classes inherits/
   implements this class, e.g. BamDataFile, FastaReferenceFile etc.
   This simplifies validation of contig compatibility.

 * CLEANUP: Package no longer warns on "'fasta.info' is deprecated".
 
 
Version: 0.6.1 [2015-05-06]

SIGNIFICANT CHANGES:

 * Package now requires R (>= 3.1.3) released Match 2015. This allows
   us to use BioC (>= 3.0) (October 2014).

NEW FEATURES:

 * Added FastaReferenceIndexFile.

 * Added SeqzFile and SeqzFileSet skeletons.

 * Added splitUp() for FastqDataFile.  Added package tests.

 * Now readGeometry() for FastqDataFile also works for compressed FASTQ files.

 * Now countNucleotides() handles multiple chromosomes.

 * Added default isCompatibleWith() for AromaSeqDataFile object, which
   uses internal isCompatibleWithBySeqNames().

REFACTORIZATION:

 * CLEANUP: Now using getSeqNames() everywhere.

BUG FIXES:

 * Now getMateFile() for FastqDataFile returns a "paired" file.

 
Version: 0.6.0 [2015-02-28]

SIGNIFICANT CHANGES:

 * Importing several core Bioc packages (instead of suggesting them).
 
 
Version: 0.5.22 [2014-09-29]

NEW FEATURES:

 * Added tview() for BamDataFile.
 
 * Start adding support for the SRA Toolkit and SRA files.
   Added SRADataFile, SRADataSet, and systemSraToolkit().

 
Version: 0.5.21 [2014-09-28]

NEW FEATURES:

 * Added countNucleotides() for BamDataSet.

PERFORMANCE:

 * Added support for memoization to countNucleotides() for BamDataFile.
 
 
Version: 0.5.20 [2014-09-09]

BUG FIXES:

 * getGroups() for FileGroupsInterface would drop suffixes _1 and _R2, which
   should be there, from fullnames.
 
 
Version: 0.5.19 [2014-09-05]

SOFTWARE QUALITY:

 * ROBUSTNESS: When copying files the file permissions of the destination files
   are now reset.

REFACTORIZATION:

 * Added a few missing NAMESPACE imports.
 
 
Version: 0.5.18 [2014-08-27]

NEW FEATURES:

 * Added extractCounts() for HTSeqCountDataFile and HTSeqCountDataSet.

BUG FIXES:

 * ROBUSTNESS: Now extractMatrix() and readDGE() for HTSeqCountDataSet drops
   "genes" with prefix '__' in case they exists, e.g. "__no_feature",
   "__ambiguous", etc.
 
 
Version: 0.5.17 [2014-08-23]

SOFTWARE QUALITY:

 * ROBUSTNESS: Now getFastaReferenceFile() now asserts compatibility.

 * ROBUSTNESS: Now buildTopHat2TranscriptomeIndexSet() and
   buildBowtie2IndexSet() assert that the returned index set is
   compatible with the input data.

BUG FIXES:

 * buildTopHat2TranscriptomeIndexSet() would give an error if the final
   destination directory already existed.
 
 
Version: 0.5.16 [2014-08-12]

SOFTWARE QUALITY:

 * ROBUSTNESS: Now Bowtie2Alignment asserts that SAM read groups to
   be written do not contain spaces.

BUG FIXES:

 * getSeqNames() for Bowtie2IndexSet and FastaReferenceFile would return the
   sequence description in addition to the ID as part of the name.
 
 
Version: 0.5.15 [2014-08-09]

NEW FEATURES:

 * Now all static byOrganism() methods infer the organism from the passed
   argument via getOrganism() if not already a character string, e.g.
   gtf <- GtfDataFile$byOrganism(fa) where fa is a FastaReferenceFile.
 
 
Version: 0.5.14 [2014-08-08]

NEW FEATURES:

 * Added argument 'groupBy' to Bowtie2Alignment, which can be used to
   specify which FASTQ files should be processed together.

 * ROBUSTNESS: Now bowtie2() supports multiple FASTQ files/file pairs
   and commas and spaces in directory names (but not filenames).

 * Now it is possible to specify the "home" directory of each external
   software used via system environment variables, e.g. 'BOWTIE2_HOME'.

 * CLEANUP: Bowtie2Alignment no longer keeps intermediate SAM file.

BUG FIXES:

 * Now Bowtie2Alignment escapes spaces in SAM Read Group values before passing
   to Bowtie2.
 
 
Version: 0.5.13 [2014-08-07]

BUG FIXES:

 * Now FastQCReporter also works with FastQC (>= 0.11.1).
 
 
Version: 0.5.12 [2014-07-24]

NEW FEATURES:

 * GENERALIZATION: Now argument 'organism' can also be a file or a data
   set in addition to a character string for most methods, e.g.
   FastqDataSet(name, organism=fa) where 'fa' is a FastaReferenceFile.

 * Added argument 'transcriptomeIndexSet' to tophat().

SOFTWARE QUALITY:

 * ROBUSTNESS: Now getOutputDataSet() for AbstractAlignment asserts
   that the output data set contains at most the same number of items
   as the input data set.

 * ROBUSTNESS: Now buildTopHat2TranscriptomeIndexSet() asserts that the
   Bowtie2 index set and GTF have compatible sequence names.

PERFORMANCE:

 * SPEEDUP: Now getSeqNames() for GtfDataFile memoizes results.

 * SPEEDUP: Now Tophat2Alignment() prebuilds the transcriptome index
   set and reuses it for all samples.  Requires Tophat (>= 2.0.10).
 
BUG FIXES:

 * tophat(reads1=NULL, gtf) would generate an error.

 
Version: 0.5.12 [2014-07-22]

SOFTWARE QUALITY:

 * ROBUSTNESS: Now buildTopHat2TranscriptomeIndexSet() asserts that the
   Bowtie2 index set and GTF have compatible sequence names.

BUG FIXES:

 * tophat(reads1=NULL, gtf) would generate an error.

 
Version: 0.5.11 [2014-07-18]

NEW FEATURES:

 * GENERALIZATION: Now getReadCounts() for BamDataFile falls back to use
   Rsamtools::quickBamFlagSummary() if 'samtools indexstats' is not available.
 
 
Version: 0.5.10 [2014-06-25]

NEW FEATURES:

 * Added missing nucleotide type ('N') to AromaUnitNucleotideCountsFile
   and added argument 'na.rm' to getGcContent() for that class.
 
 
Version: 0.5.9 [2014-06-16]

NEW FEATURES:

 * Updated startup message on how to install devel version of package.

BUG FIXES:

 * findGATK(mustExist=FALSE) would return FALSE instead of NULL if GATK was
   not found.
 
 
Version: 0.5.8 [2014-06-14]

NEW FEATURES:

 * Added countNucleotides() for BamDataFile with a package system test.

 
Version: 0.5.7 [2014-05-24]

NEW FEATURES:

 * ROBUSTNESS: Now findFastQC(mustExist=FALSE) returns NULL if
   'fastqc --version' fails although 'fastqc' is found.

 * ROBUSTNESS: capabilitiesOf() always returns even if one of the
   "find" functions gives an error.
 
 
Version: 0.5.6 [2014-05-11]

NEW FEATURES:

 * Added argument 'jvmArgs' to systemJava() to make it simple to call
   Java as 'java -Xmx1024m ..." etc.
 
 
Version: 0.5.5 [2014-05-02]

REFACTORIZATION:

 * CLEANUP: Now using ds[[idx]] instead of getFile(ds, idx) everywhere.
 
 
Version: 0.5.4 [2014-04-23]

NEW FEATURES:

 * Non-installed suggested packages are now automatically installed when
   needed.  This is achieved by using R.utils::use() instead of require().

BUG FIXES:

 * doDownsample() for FastqDataSet ignored argument 'subset'.
 
 
Version: 0.5.3 [2014-04-19]

BUG FIXES:

 * After moving dsApply() et al. to R.filesets, this package never ran jobs in
   parallel.  Forgot to update the name of the setting.
 
 
Version: 0.5.2 [2014-04-18]

NEW FEATURES:

 * Added doDownsample() for BamDataSet and FastqDataSet.

 * Added BamDownsampler analogously to FastqDownsampler.

 * Added writeSample() for BamDataFile utilizing Rsamtools::filterBam().

 * Now getProgramString() for BamDataFile returns information on all
   programs used, not just the first one.  By default, it no longer
   reports on the full calls. It also does a better job on presenting
   and cleaning up the software names.

BUG FIXES:

 * FastqDownsampler did not respect fullname translators.

 * process() for HTSeqCounting and TopHat2Alignment would remove the temporary
   uncompressed GTF file on exit, even if asynchroneous calls are still running.
 
 
Version: 0.5.1 [2014-04-16]

NEW FEATURES:

 * Now getDefaultFullName() for FastqDataFile drops PE suffixes.

 * Added field 'paired' to FastqDataFile.

PERFORMANCE:

 * SPEEDUP: Now readSeqLengths() for FastaReferenceFile memoizes results.

BUG FIXES:

 * convertToBam()/convertToSam() for data sets would write all SAM/BAM files
   to the directory of the first file.
 
 
Version: 0.5.0 [2014-04-15]

SIGNIFICANT CHANGES:

 * Package now requires R (>= 3.1.0) and BioC (>= 2.14.0).

 * Added 'QDNAseq' dependency.

REFACTORIZATION:

 * CLEANUP: Dropped BioC (< 2.14.0) backward compatibility code.
 
 
Version: 0.4.39 [2014-04-13]

NEW FEATURES:

 * Added buildDictionary() for FastaReferenceFile.  Required by GATK.

SOFTWARE QUALITY:

 * ROBUSTNESS: Now gatk() throws GATK errors as R errors.

 * ROBUSTNESS: Added package system test for gatk().
 
 
Version: 0.4.38 [2014-04-13]

NEW FEATURES:

 * Added support for paired-end BWA alignment in addition already
   supported single-end BWA alignment.

 * Now paired-end alignments are tagged as "pe".  Previously they were
   tagged as "paired", which was ambigous in case for instance
   tumor-normal pair data was analyzed.

 * CLEANUP: Now FastQCReporter outputs sample directories without the
   default and auxillary '_fastqc' suffix.
 
 
Version: 0.4.37 [2014-04-10]

SOFTWARE QUALITY:

 * Now doTopHat2() requires that 'transcripts' is explicitly specified.
   This is to protect against the mistake when the user forgets to
   specify the transcripts.

BUG FIXES:

 * getSequenceNames() for Bowtie2IndexSet returned nothing.
 
 
Version: 0.4.36 [2014-04-08]

NEW FEATURES:

 * Making more efforts of utilizing directory structure patterns.

BUG FIXES:

 * getSequenceNames() for Bowtie2IndexSet returned nothing.
 
 
Version: 0.4.35 [2014-04-06]

REFACTORIZATION:

 * CLEANUP: Now all parallel/distributed processing is handled by
   dsApply(), which has been moved to R.filesets 1.5.0.
 
 
Version: 0.4.34 [2014-04-02]

REFACTORIZATION:

 * CLEANUP: Dropped declaration of internal S3 method dsApply().
   This ease the migration of that method to the R.filesets package.
 
 
Version: 0.4.33 [2014-03-14]

NEW FEATURES:

 * Now findGATK() also returns the version of GATK.
 
 
Version: 0.4.32 [2014-03-11]

NEW FEATURES:

 * Now htseqCount() also outputs a log file.

 * ROBUSTNESS: Added argument 'sortByName' to htseqCount(), which for
   now defaults to "always", because although htseq-count (>= 0.6.0)
   is supposed to handle when BAM files are sorted by position, it will
   run out of memory for modestly large BAM files.

SOFTWARE QUALITY:

 * ROBUSTNESS: If the external software returns a non-zero exit code,
   then htseqCount() removes any empty count file and scans the log file
   for errors and warnings and translates them into ditto in R.
 
 
Version: 0.4.31 [2014-03-10]

NEW FEATURES:

 * Added getSeqNames() for GtfDataFile.

SOFTWARE QUALITY:

 * ROBUSTNESS: Now process() for HTSeqCounting validates that the GTF
   file has chromsome names in a format that matched the BAM files.
   If not, an error is thrown.

 * ROBUSTNESS: Now bowtie2(), bowtie2Build(), bwaAln(), bwaIndex() and so
   on use shQuote() for all pathnames.

PERFORMANCE:

 * SPEEDUP: Now htseqCount() only workaround non-supported BAM files
   for older version of htseq-count.
 
 
Version: 0.4.30 [2014-03-09]

NEW FEATURES:

 * Now findHTSeq() returns versions in format '0.5.4-3' not '0.5.4p3',
   This makes it easier to test against different versions of HTSeq.

 * Added verbose output to htseqCount().

SOFTWARE QUALITY:

 * ROBUSTNESS: Now htseqCount() writes results atomically.

DOCUMENTATION:

 * Added Details section to help("htseqCount").

BUG FIXES:

 * getIndexStats() for BamDataFile would not work if pathname had a space or
   other symbols causing it to be split up.
 
 
Version: 0.4.29 [2014-03-08]

NEW FEATURES:

 * Now as.character()/print() for BamDataFile reports on by which software
   (and how) the BAM file was created, if the @PG SAM header is available.

 * RELAXATION: readHeader() for BamDataFile no longer require that
   the BAM file is indexed.

 
Version: 0.4.28 [2014-03-06]

NEW FEATURES:

 * Added convertToSam() analogously to convertToBam().

 * Added arguments 'mateInnerDist' and 'mateStdDev' to tophat().
   Added a doTopHat2() package test for using these.

SOFTWARE QUALITY:

 * ROBUSTNESS: Now tophat() asserts that no duplicated options are
   passed to the TopHat executable.
 
 
Version: 0.4.27 [2014-03-02]

NEW FEATURES:

 * Added FastQCReporter.

 * Added FastQCDataFile and FastQCDataFileSet.

 * Added low-level support for calling FastQC.
 
 
Version: 0.4.26 [2014-02-27]

NEW FEATURES:

 * GENERALIZATION: Now findRspReportTemplate() scans for templates
   also for super classes of the object.  This means that the template
   for FastqDataFile also works for IlluminaFastqDataFile:s.
 
 
Version: 0.4.25 [2014-02-25]

NEW FEATURES:

 * Now getSampleName() passes '...' to getFullName().
 
 
Version: 0.4.24 [2014-02-25]

SOFTWARE QUALITY:

 * ROBUSTNESS: Now explicitly forcing package tests to run either
   in sequential or in parallel mode.

BUG FIXES:

 * FastaReferenceFile$byOrganism(organism, prefix) would throw "Error: Unknown
   arguments: prefix".  Added explicit package system test for this.
 
 
Version: 0.4.23 [2014-02-20]

NEW FEATURES:

 * Added writeFastaReferenceFile() for FastaReferenceSet for merging
   multiple FASTA files into a new one.

 * Added getOrganism() to FastaReferenceSet.

PERFORMANCE:

 * GENERALIZATION: Better handling of gzipped FastaReferenceFile:s,
   e.g. now byOrganism() also locates gzipped files.
 
 
Version: 0.4.22 [2014-02-03]

BUG FIXES:

 * byPath() for PairedEndFastqDataSet explicitly passed arguments '...' to
   NextMethod(), which would cause them to be duplicated in certain cases.
 
 
Version: 0.4.21 [2014-01-25]

NEW FEATURES:

 * Now GtfDataFile by default assumes that the GTF file has no column headers.

 * Now byOrganism() for FastaReferenceFile and GtfDataFile pass '...' to the
   constructor as well.

DOCUMENTATION:

 * Added help for byOrganism() for FastaReferenceFile and GtfDataFile.
 
 
Version: 0.4.20 [2014-01-24]

NEW FEATURES:

 * Added doHTSeqCount() with a package system test.

 * Added extractDGEList() for HTSeqCountDataSet with a package system test.

 * Added HTSeqCounting with a package system test.

 * Added HTSeqCountDataFile|Set classes.

SOFTWARE QUALITY:

 * Package passes 'R CMD check' with all OK.

BUG FIXES:

 * Now the BamDataFileSet returned by the TopHat2Alignment properly identifies
   its name and organism.

 * findHTSeq() failed to identify the version.
 
 
Version: 0.4.19 [2014-01-18]

NEW FEATURES:

 * Now TopHat2Alignment supports also gzipped GTF files by temporarily
   uncompressing them before processing the samples.

 * Added GtfDataFile.

 
Version: 0.4.18 [2014-01-18]

NEW FEATURES:

 * Added getFastaReferenceFile() for AbstractIndexSet.

 * Added tag 'gtf' to the set of asterisk tags of TopHat2Alignment if argument
   'transcripts' is specified.

PERFORMANCE:

 * SPEEDUP: Now TopHat2Alignment adds a link to the FASTA file in the
   directory if the Bowtie2 index set, which then will be used by TopHat
   when processing all samples.  Previously it would create such a FASTA
   file by reverse engineering.

SOFTWARE QUALITY:

 * ROBUSTNESS: Now tophat() and TopHat2Alignment give an informative error
   message if a *gzipped* GTF file is passed, which is not supported.

 * ROBUSTNESS: Added package system test of TopHat2Alignment with
   a GTF transcripts file specified.
 
 
Version: 0.4.17 [2014-01-16]

SOFTWARE QUALITY:

 * ROBUSTNESS: Now getGroups() of BamMerger and TopHat2Alignment assert
   that the file indices identified for each group/sample is unique.

 * ROBUSTNESS: Update test data set such that it possible to test alignment
   of multiple FASTQ files per sample.

REFACTORIZATION:

 * CLEANUP: Now BamMerger and TopHat2Alignment implements the new
   FileGroupsInterface.

BUG FIXES:

 * getGroups() of TopHat2Alignment would not generate the correct sets of 
   indices.
 
 
Version: 0.4.16 [2014-01-15]

BUG FIXES:

 * Automatic enabling of parallel processing was disabled by mistake in v0.4.13.
 
 
Version: 0.4.15 [2014-01-14]

SOFTWARE QUALITY:

 * ROBUSTNESS: Now low-level methods that take a vector of pathnames as input
   tests assert that there are no duplicated pathnames, e.g. bowtie2(), 
   cuffdiff(), and tophat().
 
 
Version: 0.4.14 [2014-01-13]

SIGNIFICANT CHANGES:

 * Bumped up package dependencies to reflect the real code requirements.
 
 
Version: 0.4.13 [2014-01-09]

NEW FEATURES:

 * Added argument 'groupBy' to TopHat2Alignment, which can be used to
   specify which FASTQ files should be processed together.
 
 
Version: 0.4.12 [2014-01-07]

NEW FEATURES:

 * Now getFilePairs() for FastqDataSet returns NA files (was R1) in case mate
   file R2 could not be found.

BUG FIXES:

 * Now readGeometry() for FastqDataFile returns missing values for non-existing
   files.  Used to give an error.
 
 
Version: 0.4.11 [2014-01-04]

NEW FEATURES:

 * CONSISTENCY: Now dsApply() for GenericDataFileSet returns a named
   vector with names corresponding to the names of the processed file
   items.  Added an example to the help for dsApply() and a package
   system test.
 
 
Version: 0.4.10 [2013-12-21]

PERFORMANCE:

 * SPEEDUP: Now getFirstSequenceInfo() for IlluminaFastqDataFile only
   parses one read (it used to read all of the FASTQ file).
 
 
Version: 0.4.9 [2013-11-29]

NEW FEATURES:

 * Reworked htseqCount() w/ modified signature, internal sam/bam sorting
   by name.
 
 
Version: 0.4.8 [2013-11-24]

PERFORMANCE:

 * SPEEDUP: Parallelized TotalCnBinnedCounting.

BUG FIXES:

 * smoothRawCopyNumbers() for TotalCnBinnedCounting assumed that the
   'matrixStats' package was loaded.
 
 
Version: 0.4.7 [2013-11-22]

NEW FEATURES:

 * Added BamMerger and a system test.

 * Now all AromaSeqTransform classes displays the output path
   by default when printed.

 * Added argument 'IDXS' to dsApply() allowing to process not only
   individuals files but also lists of individuals files.
 
 
Version: 0.4.6 [2013-11-21]

NEW FEATURES:

 * Now process() for TopHat2Alignment generates an index file for
   accepted_hits.bam.  This will also assert the assumption that
   TopHat2 outputs sorted BAM files, because if not indexing will
   fail and an error will be generated.

 * CLEANUP: bwaIndexPrefix() no longer adds a "methods" tags (i.e.
   'bwtsw' or 'is'), because the generated index files are identical
   regardless of method used.
 
 
Version: 0.4.5 [2013-11-20]

NEW FEATURES:

 * Now doQDNAseq() for BamDataFile and QDNAseqEstimation output RDS files.
 
 
Version: 0.4.4 [2013-11-19]

NEW FEATURES:

 * Now getSampleName() for IlluminaFastqDataFile gives a more informative
   error message if the fullname does not match the expected pattern.

SOFTWARE QUALITY:

 * ROBUSTNESS: Now FastaReferenceFile$byOrganism() asserts that the
   returned FASTA file specifies the requested organism.
 
 
Version: 0.4.3 [2013-11-18]

NEW FEATURES:

 * CLEANUP/REDUNDANCY: Now doQDNAseq() for BamDataFile passes only the
   subset of arguments part of '...' that apply to each of the internal
   QDNAseq steps.  This means that doQDNAseq() no longer have to
   replicate the arguments of the QDNAseq package.

BUG FIXES:

 * REPRODUCIBILITY: doQDNAseq() for BamDataFile forgot to apply the
   pre-filtering step that is part of QDNAseq.
 
 
Version: 0.4.2 [2013-11-17]

NEW FEATURES:

 * Added support for FastaReferenceFile$byOrganism(..., prefix),
   making it possible to distinguish between multiple FASTA files
   for the same organism.

 * CLEANUP: BwaAlignment no longer includes the BWA index 'method' as
   a tag in the output directory, because all methods outputs the exact
   same BWA index, e.g. now tag 'bwa' is added when it was 'bwa,bwtsw'.

SOFTWARE QUALITY:

 * ROBUSTNESS: Now buildBwaIndexSet(..., method="is") checks for maximum
   size of reference genome (2GB) and gives an informative error if the
   FASTA file is greater.

 * ROBUSTNESS: If read group ID is missing, process() for BwaAlignment
   sets it to be the same as the fullname of the filename.  Same for
   the SM read group.  This as the advantage of aligned BAM files are
   more likely to be mergable afterward.

 * ROBUSTNESS: The default method for building BWA indices is now 'bwtsw',
   because contrary to the previous default ('is'), the new one supports
   larger genomes as well (such as the human genome) and will always work.
   It is useful to understand that regardless of choice, the generated
   index sets are always identical across building methods.  There is
   a package system test asserting this fact.

BUG FIXES:

 * BwaIndexSet$byPrefix(prefix) would find any BWA index set in directory
   dirname(prefix) without matching filenames of the set to basename(prefix).
 
 
Version: 0.4.1 [2013-11-16]

NEW FEATURES:

 * Added QDNAseqEstimation, which is utilized by doQDNAseq() methods.

 * Added low-level picardValidateSamFile().
 
SOFTWARE QUALITY:

 * Added validate() for both Sam- and BamDataFile:s, and corresponding
   system tests based on BWA and Bowtie2 aligned SAM/BAM files.

 
Version: 0.4.0 [2013-11-16]

SOFTWARE QUALITY:

 * Package passes 'R CMD check' (all OKs) and extended system tests.

REFACTORIZATION:

 * CLEANUP: Added AromaSeqTransform class that now several method
   classes extends.
 
 
Version: 0.3.7 [2013-11-15]

PERFORMANCE:

 * SPEEDUP: Now PicardDuplicateRemoval skips already processed items much
   faster and if all are done, even quicker.

 * Now parallel processing via BiocParallel and BatchJobs is automatically
   enabled if a .BatchJobs.R file exists in the current working directory
   when 'aroma.seq' is attached.
 
 
Version: 0.3.6 [2013-11-14]

NEW FEATURES:

 * Added sortByPosition() for BamDataFile/BamDataSet.
 
 
Version: 0.3.5 [2013-11-12]

NEW FEATURES:

 * Added readSeqFile() for FastqDataFile with system tests.

 * For now FASTA files should be non-compressed in order to
   work will all third-party tools.

PERFORMANCE:

 * SPEEDUP: Now report() for FastqDataSet defaults to HTML reports, and
   supports parallel processing (with a package system test).
 
 
Version: 0.3.4 [2013-11-11]

PERFORMANCE:

 * SPEEDUP: Now Bowtie2Alignment and BwaAlignment skip already processed
   items much faster and if all are done, even quicker.

BUG FIXES:

 * BamDataSet$byPath() would include also SAM files.
 
 
Version: 0.3.3 [2013-11-10]

NEW FEATURES:

 * Started to add support for custom directory structures.
 
 
Version: 0.3.2 [2013-11-09]

NEW FEATURES:

 * Added static byName() for FastqDataSet, BamDataSet and SamDataSet.

 * Added FastaReferenceFile$byOrganism().

 * Now all input and output paths contains the organims name, e.g.
   fastqData/<dataSet>/<organism>/.  Placeholder "Generic" is no
   longer used for <organism>.

 * Added getOrganism() for BamDataSet, SamDataSet, and FastqDataSet.

REFACTORIZATION:

 * Now all package system tests use byName() instead of byPath().
 
 
Version: 0.3.1 [2013-11-08]

NEW FEATURES:

 * Added samtoolsSort() and samtoolsMpileup().

DOCUMENTATION:

 * Added more help pages.
 
 
Version: 0.3.0 [2013-11-02]

NEW FEATURES:

 * Added doTopHat2() and corresponding system test.

 * Now FastqDataFile|Set handles more paired filename formats.

PERFORMANCE:

 * SPEEDUP: Parallelized BinnedGcNormalization.

SOFTWARE QUALITY:

 * ROBUSTNESS: Added package system test for BinnedGcNormalization.

REFACTORIZATION:

 * Migrating to use the 'BiocParallel' package for interfacing with BatchJobs
   and other parallel backends.

BUG FIXES:

 * normalizeGcContent() assumed that 'aroma.light' was attached.
 
 
Version: 0.2.37 [2013-11-01]

NEW FEATURES:

 * Now FastaReferenceSet$byPath() also finds gzip'ed FASTA files.

 * Now buildBowtie2IndexSet() for FastaReferenceFile supports gzip'ed
   FASTA files.

PERFORMANCE:

 * SPEEDUP: Parallelized TopHat2Alignment.  Added system test.

 * SPEEDUP: Now process() for TopHat2Alignment skips already processed samples.
 
 
Version: 0.2.36 [2013-10-31]

NEW FEATURES:

 * Added input BAM file support to HTSeq.

SOFTWARE QUALITY:

 * Added check for 'python' to capabilitiesOf(aroma.seq).

REFACTORIZATION:

 * Updated capitalization everywhere to reflect the updated name of the
   'QDNAseq' package (was 'qdnaseq').
 
 
Version: 0.2.35 [2013-10-30]

SOFTWARE QUALITY:

 * ROBUSTNESS: Now process() for TopHat2Alignment checks for known incompatible
   versions of bowtie2 and tophat2.
 
 * ROBUSTNESS: Added package system test for TopHat2Alignment.

 
Version: 0.2.34 [2013-10-19]

NEW FEATURES:

 * Added tophat1() and tophat2() which are wrappers for tophat().
 
 
Version: 0.2.33 [2013-10-18]

 * ...
 
 
Version: 0.2.32 [2013-10-17]

SIGNIFICANT CHANGES:

 * Package now requires R (>= 3.0.2) [and Bioc (>= 2.13.0)].

 * Updated package dependences.
 
 
Version: 0.2.31 [2013-09-28]

NEW FEATURES:

 * Now the 'aroma.seq' Package object is also available when the package is
   only loaded (but not attached).

 * ROBUSTNESS: Now dsApply() generates more unique BatchJobs registry names
   in order to avoid potential name clashes.

 * Updated package dependences.

BUG FIXES:

 * Forgot argument 'verbose' of process() of FastqDownsampler.
 
 
Version: 0.2.30 [2013-09-13]

PERFORMANCE:

 * Added basic support for parallel processing of FastqDownsampler().

SOFTWARE QUALITY:

 * Added system test for FastqDownsampler.

DOCUMENTATION:

 * Added Rd help for FastqDownsampler.

 * Removed low-level functions from the help index.

 
 
Version: 0.2.29 [2013-09-03]

PERFORMANCE:

 * Added basic support for parallel processing of doQDNASeq() and
   PicardDuplicateRemoval.
 
 
Version: 0.2.28 [2013-08-31]

PERFORMANCE:

 * Basic support for parallel processing via BwaAlignment works.

SOFTWARE QUALITY:

 * Added system test for doQDNASeq().

REFACTORIZATION:

 * CLEANUP: Restructuring code for parallel/distributed processing.

BUG FIXES:

 * doQDNASeq() for BamDataSet would give an error when it tried to collect and
   return the result file set.

 * doQDNASeq() for BamDataSet would give an error if data set was already
   processed and verbose output was enabled.
 
 
Version: 0.2.26 [2013-08-26]

PERFORMANCE:

 * Basic support for parallel processing via Bowtie2Alignment works.

 * Starting to put in the core framework for distributed processing.

BUG FIXES:

 * The internal workaround of process() for Bowtie2Alignment that handled
   commas in FASTQ filenames deleted the temporary files too soon resulting in
   garbage alignments.
 
 
Version: 0.2.25 [2013-08-26]

NEW FEATURES:

 * Now TopHatAlignment supports the new style of "paired" FastqDataSet:s.
 
 
Version: 0.2.24 [2013-08-24]

NEW FEATURES:

 * Now Bowtie2Alignment() will do paired-end alignment if the FastqDataSet
   specifies paired-end reads.

 * Made AbstractAlignment aware of paired-end FastqDataSet:s.

 * Added byPath() for FastqDataSet that acknowledge 'paired' argument.

 * Added argument 'paired' to constructor of FastqDataSet and methods
   isPaired() and getFilePairs().

 * Added getMateFile() for FastqDataFile.
 
 
Version: 0.2.23 [2013-08-22]

BUG FIXES:

 * Read Group options ('--rg' and '--rg-id') passed to 'bowtie2' by the
   Bowtie2Aligment class did not have the preceeding '--'.
 
 
Version: 0.2.22 [2013-08-22]

NEW FEATURES:

 * Added doBWA() and doBowtie2().

REFACTORIZATION:

 * CLEANUP: Now doQDNASeq() utilizes doBWA().
 
 
Version: 0.2.21 [2013-08-21]

BUG FIXES:

 * Package gave errors with 'R CMD check' on R devel.
 
 
Version: 0.2.20 [2013-08-15]

NEW FEATURES:

 * Added TopHatAlignment, FastaReferenceSet, and prototype RNA-seq
   workflow script.
 
 
Version: 0.2.19 [2013-08-06]

SIGNIFICANT CHANGES:

 * Bumped up package dependencies to match what is on available on CRAN.
 
 
Version: 0.2.18 [2013-07-29]

NEW FEATURES:

 * Now doQDNASeq() for BamDataSet saves processed data to qdnaseqData/.
 
 
Version: 0.2.17 [2013-07-19]

PERFORMANCE:

 * SPEEDUP: Now the results of capabilitiesOf() are cached.
 
 
Version: 0.2.16 [2013-07-18]

NEW FEATURES:

 * Now all NnnAlignment methods outputs to root directory 'bamData/'.

 * Added annotationData/ and fastqData/ under package's exData/.

SOFTWARE QUALITY:

 * ROBUSTNESS: Added several system tests.

BUG FIXES:

 * Now Bowtie2Alignment handles if there are commas in the pathname of the
   FASTQ file by using a tempory file link without commas.  This is needed
   because the bowtie2 executable does not support commas.

 * queryBowtie2("support:fastq.gz") did not always return a logical.
 
 
Version: 0.2.15 [2013-07-11]

SIGNIFICANT CHANGES:

 * Package now requires R v3.0.0 or newer.

NEW FEATURES:

 * Added doQDNASeq() for FastqDataSet and BamDataSet.

 
Version: 0.2.14 [2013-07-11]

BUG FIXES:

 * Error in UseMethod("getPathname") : no applicable method for 'getPathname'
   applied to an object of class.
 
 
Version: 0.2.13 [2013-07-03]

NEW FEATURES:

 * Added a first draft for FastqDownsampler.

 * Added writeSample() for FastqDataFile.

DOCUMENTATION:

 * More help documentation.

 
Version: 0.2.12 [2013-06-27]

NEW FEATURES:

 * GENERALIZATION: Now FastqDataFile can also hold a gzipped file.  If so, 
   then certain properties of the file is not parsed, e.g. number of sequences.
   However, the file can still be passed on to for instance aligners that
   support gzipped files out of the box, e.g. BwaAlignment.

 * Now process() for Bowtie2Aligment temporarily decompresses gzipped FASTQ
   files in case the installed bowtie2 does not support gzip files.

BUG FIXES:

 * buildBowtie2IndexSet() for FastaReferenceFile became broken after updates
   in systemBowtie2Build().
 
 
Version: 0.2.11 [2013-06-20]

NEW FEATURES:

 * Added findHTSeq() and systemHTSeq().

 * Now readGeometry() and getGeometry() for FastqDataFile returns
   c(NA,NA) for gzipped files. This is better than an error.

 
Version: 0.2.10 [2013-04-04]

PERFORMANCE:

 * SPEEDUP: Now the internal "find" function that locates external
   executables caches their results.

 
Version: 0.2.9 [2013-03-15]

 * ...
 
 
Version: 0.2.8 [2013-03-14]

NEW FEATURES:

 * Standardize args in bowtie/tophat/cuff*: Move 'command' to end, 
   use 'optionsVec'.
 
 
Version: 0.2.7 [2013-03-08]

NEW FEATURES:

 * Rewrote several bowtie methods to align with tophat.R as a template
 
 
Version: 0.2.6 [2013-02-22]

NEW FEATURES:

 * Added findTopHat() et al.
 
 
Version: 0.2.5 [2013-02-15]

NEW FEATURES:

 * Added systemTophat(), and tophat().
 
 
Version: 0.2.4 [2013-02-08]

NEW FEATURES:

 * Added systemTophat() and systemTophatBuild() and tophat().
 
 
Version: 0.2.3 [2012-12-06]

NEW FEATURES:

 * Added report() for FastqDataFile and FastqDataSet.

 * Added findRspReportTemplate().
 
 
Version: 0.2.2 [2012-12-03]

 * ...
 
 
Version: 0.2.1 [2012-11-26]

PERFORMANCE:

 * process(..., dropEmpty=TRUE) for GatkAlleleCounting is now much faster.

SOFTWARE QUALITY:

 * ROBUSTNESS: Now convertToBamDataSet() for SamDataSet asserts that the
   output set is complete.

BUG FIXES:

 * process() for BwaAlignment and Bowtie2Alignment was only align the first
   sample regardless on input data set.  This bug was introduced in
   aroma.seq v0.1.27.

 * getOutputDataSet() for AbstractAlignment and PicardDuplicateRemoval could
   return data sets with "missing" files, if the method was not completed.
   Now they only returns the existing output files.
 
 
Version: 0.2.0 [2012-11-21]

NEW FEATURES:

 * Updated verbose output of parameters.
 
 
Version: 0.1.29 [2012-11-21]

REFACTORIZATION:

 * Now applicable classes utilize the new ParametersInterface.

DOCUMENTATION:

 * Hiding more internal methods from the help indices.
 
 
Version: 0.1.27 [2012-11-12]

REFACTORIZATION:

 * CLEANUP: Now seq_along(x) instead of seq(along=x) everywhere. Similarly, 
   seq(ds) where 'ds' is GenericDataFileSet is now replaced by seq_along(ds).
   Likewise, seq_len(x) replaces seq(length=x), and length(ds) replaces 
   nbrOfFiles(ds).
 
 
Version: 0.1.26 [2012-11-09]

NEW FEATURES:

 * Added argument 'dropEmpty' to GatkAlleleCounting, which will drop all SNPs
   with zero coverage from the output files making the smaller and faster to 
   read, particularly for low coverage samples.
 
 
Version: 0.1.25 [2012-11-08]

NEW FEATURES:

 * Implemented getOutputDataSet() for GatkAlleleCounting, which
   returns a TabularTextFileSet.
 
 
Version: 0.1.24 [2012-11-08]

SIGNIFICANT CHANGES:

 * Renamed getColumnNames() to getDefaultColumnNames() for all classes
   inheriting from GenericTabularFile, because of new ColumnNamesInterface.
 
 
Version: 0.1.23 [2012-11-02]

NEW FEATURES:

 * Now process() for GatkAlleleCounting outputs cleaner files.
 
 
Version: 0.1.22 [2012-10-31]

NEW FEATURES:

 * Added GatkAlleleCounting.

 * Added anyDuplicated() and writeBedDataFile() for AromaUgpFile.

 * Added buildIndex() for FastaReferenceFile for building FAI index files.

 * Added buildScripts/.  First script is creating an Aroma UGP file
   containing the positions of Chr1-25 SNPs of a SNP135 BED file.
 
 
Version: 0.1.21 [2012-10-30]

SOFTWARE QUALITY:

 * Added validate() for BamDataFile.
 
 
Version: 0.1.20 [2012-10-29]

REFACTORIZATION:

 * CLEANUP: Now using Arguments$get(Read|Writ)ablePath() instead of
   filePath(..., expandLinks="any").
 
 
Version: 0.1.19 [2012-10-21]

SOFTWARE QUALITY:

 * ROBUSTNESS: Now using Arguments$getWritablePath() everywhere instead
   of mkdirs(), because the former will do a better job in creating
   and asserting directories on slow shared file systems, and when it
   fails it gives a more informative error message.

BUG FIXES:

 * FIX: Now BwaAligment will use a default SAM read group ID of 1 (cf. Picard
   AddOrReplaceReadGroups) if missing.  Previously it gave an error instead.
 
 
Version: 0.1.18 [2012-10-18]

NEW FEATURES:

 * Added trial version of BinnedGcNormalization.
 
 
Version: 0.1.17 [2012-10-17]

SOFTWARE QUALITY:

 * ROBUSTNESS: Now binTabulate(seq, ...) also handles the case where sequence
   'seq' is offsetted, i.e. starts at a different position than the first one.
 
 
Version: 0.1.16 [2012-10-16]

NEW FEATURES:

 * Added AromaUnitNucleotideCountsFile and methods for importing binned
   nucleotide counts from a BSgenome object.

 * Added binTabulate() for MaskedDNAString.

BUG FIXES:

 * ROBUSTNESS: No longer passing '...' to NextMethod(), cf. R-devel thread
   'Do *not* pass '...' to NextMethod() - it'll do it for you; missing
   documentation, a bug or just me?' on Oct 16, 2012.
 
 
Version: 0.1.15 [2012-10-11]

NEW FEATURES:

 * Added TotalCnBinnedCounting().
 
 
Version: 0.1.14 [2012-10-10]

NEW FEATURES:

 * Added argument 'which' to readDataFrame() for BamDataFile.
 
 
Version: 0.1.13 [2012-10-02]

NEW FEATURES:

 * Added getIndexStats(), nbrOfReads(), ... for BamDataFile:s.

 * Added readDataFrame() for BamDataFile.

 * Added PicardDuplicateRemoval.

BUG FIXES:

 * systemSamtools(), systemJava() and systemBWA() did not handle cases with
   only non-named arguments.
 
 
Version: 0.1.12 [2012-10-01]

NEW FEATURES:

 * Added IlluminaFastqData(File|Set), which is aware of Illumina specific
   filenames and sequence information.

 * Now BwaAlignment and Bowtie2Alignment inherits AbstactAlignment and both
   write SAM read groups, if available/provided.

REFACTORIZATION:

 * Package now utilizes the ShortRead package.
 
 
Version: 0.1.11 [2012-09-28]

NEW FEATURES:

 * Added getReadGroups() and replaceAllReadGroups() for BamDataFile.

 * Added SamReadGroup() class.

 * Added buildIndex() for BamDataFile.

 * Added low-level support for GATK.
 
 
Version: 0.1.10 [2012-09-27]

NEW FEATURES:

 * Added low-level support for Picard.
 
 
Version: 0.1.9 [2012-09-27]

NEW FEATURES:

 * Added Bowtie2Alignment.
 
 
Version: 0.1.8 [2012-09-27]

NEW FEATURES:

 * Added setupTests(aroma.seq) for easy setup of a redundancyTests/ directory.
 
 
Version: 0.1.7 [2012-09-25]

NEW FEATURES:

 * Added capabilitiesOf(aroma.seq).

 * Now a SamDataSet can be converted to a BamDataSet.

 * Added BwaAlignment.

 * Added BamDataFile and BamDataSet classes.

 * Added BamData(File|Set) classes, cf. SamData(File|Set).

 * Added BwaIndex(File|Set) classes for holding BWA index sets.
 
 
Version: 0.1.6 [2012-09-24]

NEW FEATURES:

 * Added buildBwaIndexSet() for FastaReferenceFile.

 * Added low-level support for BWA index, aln and samse.
 
 
Version: 0.1.5 [2012-08-31]

SOFTWARE QUALITY:

 * TESTING: Added some test scripts for running bowtie2 at the shell and at
   the system level.
 
 
Version: 0.1.4 [2012-08-22]

 * ...
 
 
Version: 0.1.3 [2012-08-21]

NEW FEATURES:

 * Add systemBowtie2Build and testSystemBowtie2Build.
 
 
Version: 0.1.2 [2012-08-20]

 * TYPO: Renamed Bowtie2Aligment to Bowtie2Alignment.
 
 
Version: 0.1.1 [2012-07-11]

NEW FEATURES:

 * Added a bowtie2() function stub.
 
 
Version: 0.1.0 [2012-06-28]

NEW FEATURES:

 * Added BowtieAlignment.

 * Added BamDataFile and BamDataSet.

 * Added FastqDataFile and FastqDataSet.

 * Added FastaReferenceFile.
 
 
Version: 0.0.1 [2012-06-28]

 * Created. Just a stub.
